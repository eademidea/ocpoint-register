
server.port=8082
spring.profiles.active=${SPRING_PROFILES_ACTIVE}
spring.config.use-legacy-processing=true

# ===============================
# = Spring docs
# ===============================
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.enabled=true
springdoc.version=@project.version@


# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection


spring.datasource.url=jdbc:postgresql://172.20.0.2:5432/ocpoint
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.username=postgres
spring.datasource.password=teste
spring.datasource.driver-class-name=org.postgresql.Driver
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
# spring.jpa.show-sql=false

# # Naming strategy
# spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
# spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS

api.security.token.secret=${JWT_SECRET:my-secret-key}
